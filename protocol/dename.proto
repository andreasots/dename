package protocol;

message TransferName {
        required bytes pubkey = 1;
        required bytes name = 2;
}

message S2SMessage {
	required int64 round = 1;
	required int64 server = 2;
	// one of the following:
	optional bytes push_queue = 3;
	optional bytes commitment = 4;
	optional bytes ack = 5;
	optional bytes round_key  = 6;
	optional bytes publish  = 7;
}

message CommitData {
	required int64 round = 1;
	required int64 server = 2;
	required bytes round_key  = 3;
	repeated bytes transaction_queue = 4;
}

message Commitment {
	required int64 round = 1;
	required int64 server = 2;
	required bytes hash  = 4;
}

message Acknowledgement {
	required int64 commiter = 1;
	required int64 acker = 2;
	required bytes commitment  = 3;
}

message MappingRoot {
	required int64 round = 1;
	required bytes root = 2;
}

