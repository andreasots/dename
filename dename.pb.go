// Code generated by protoc-gen-go.
// source: dename.proto
// DO NOT EDIT!

package main

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Queue struct {
	Round            *int64   `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	Server           *int64   `protobuf:"varint,2,req,name=server" json:"server,omitempty"`
	Entries          [][]byte `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Queue) Reset()         { *m = Queue{} }
func (m *Queue) String() string { return proto.CompactTextString(m) }
func (*Queue) ProtoMessage()    {}

func (m *Queue) GetRound() int64 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *Queue) GetServer() int64 {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return 0
}

func (m *Queue) GetEntries() [][]byte {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Commitment struct {
	Round            *int64 `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	Server           *int64 `protobuf:"varint,2,req,name=server" json:"server,omitempty"`
	QueueHash        []byte `protobuf:"bytes,3,req,name=queue_hash" json:"queue_hash,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Commitment) Reset()         { *m = Commitment{} }
func (m *Commitment) String() string { return proto.CompactTextString(m) }
func (*Commitment) ProtoMessage()    {}

func (m *Commitment) GetRound() int64 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *Commitment) GetServer() int64 {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return 0
}

func (m *Commitment) GetQueueHash() []byte {
	if m != nil {
		return m.QueueHash
	}
	return nil
}

type RoundKey struct {
	Round            *int64 `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	Server           *int64 `protobuf:"varint,2,req,name=server" json:"server,omitempty"`
	Key              []byte `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RoundKey) Reset()         { *m = RoundKey{} }
func (m *RoundKey) String() string { return proto.CompactTextString(m) }
func (*RoundKey) ProtoMessage()    {}

func (m *RoundKey) GetRound() int64 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *RoundKey) GetServer() int64 {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return 0
}

func (m *RoundKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func init() {
}
